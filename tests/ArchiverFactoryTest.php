<?php

require_once '../ArchiverFactory.php';
require_once '../Exceptions.php';
require_once '../ErrorBox.php';

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.1 on 2014-04-09 at 05:42:02.
 */
class ArchiverFactoryTest extends PHPUnit_Framework_TestCase {

    /**
     * @var ArchiverFactory
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp() {
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown() {
        
    }

    /**
     * @covers ArchiverFactory::getArchiverFromFormat
     * @todo   Implement testGetArchiverFromFormat().
     */
    public function testGetArchiverFromFormatGz() {
        $result = ArchiverFactory::getArchiverFromFormat('gz');
        $this->AssertEquals('GzArchiver', get_class($result)); 
    }
    
    public function testGetArchiverFromFormatBz() {
        $result = ArchiverFactory::getArchiverFromFormat('bz');
        $this->AssertEquals('BzArchiver', get_class($result)); 
    }
    
    public function testGetArchiverFromFormatZip() {
        $result = ArchiverFactory::getArchiverFromFormat('zip');
        $this->AssertEquals('ZipArchiver', get_class($result)); 
    }
    
    public function testGetArchiverFromFormatWrong1() {
        try {
            ArchiverFactory::getArchiverFromFormat('gzer');
        } catch (ArchiverFactoryException $ex) {
            return;
        }
        
        $this->fail('Wrong format but error not detected');
    }
    
   public function testGetArchiverFromFormatWrong2() {
        try {
            ArchiverFactory::getArchiverFromFormat('g');
        } catch (ArchiverFactoryException $ex) {
            return;
        }
        
        $this->fail('Wrong format but error not detected');
    }
    

}
